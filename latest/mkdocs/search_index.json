{
    "docs": [
        {
            "location": "/", 
            "text": "Hop.jl Documentation\n\n\n#\n\n\nHop.TightBindingModel\n \n \nType\n.\n\n\nA tight binding model.\n\n\nGenerally, every tight binding model is three dimensional. Thus every lattice vector should have three components. Lower dimensional models should be simulated by vacuum layer.\n\n\nConstructor Arguments\n\n\n\n\nlat::Matrix{Float64}\n: lattice vector. Lattice vectors should be provided as \nlat[:, i]\n\n\npositions::Matrix{Float64}\n: atom postions. Atom positions should be provided as \npositions[:, i]\n\n\n\n\nFields\n\n\n\n\nlat::Matrix{Float64}\n: lattice vector.\n\n\n\n\nsource\n\n\n#\n\n\nHop.sethopping!\n \n \nFunction\n.\n\n\nSet hoppings for a TightBindingModel t. Hoppings are expressed as \u27e80n|H|Rm\u27e9, where R is a 3-element Vector{Int} representing lattice vector.\n\n\nsource\n\n\n#\n\n\nHop.addmagneticfield!\n \n \nFunction\n.\n\n\nAdd constant magnetic field in z direction for a TightBindingModel.\n\n\nArguments\n\n\n\n\nt::TightBindingModel\n: a TightBindingModel. t has to be a cluster.\n\n\nB::Float64\n: magnetic field in z direction. B is actually Be/h, thus its unit is 1/[length]^2. e here is fundamental charge. Since electron charge is -e, positive B means -z direction for electron system.\n\n\n\n\nsource\n\n\n#\n\n\nHop.makesupercell\n \n \nFunction\n.\n\n\nCreate a supercell TightBindingModel from original TightBindingModel.\n\n\nArguments\n\n\n\n\nt::TightBindingModel\n: the original TightBindingModel.\n\n\nncells::Vector{Int}\n: a 3-element vector representing number of unit cells in three spatial directions.\n\n\n\n\nsource\n\n\n#\n\n\nHop.makecluster\n \n \nFunction\n.\n\n\nCreate cluster by cutting off all hoppings between cells.\n\n\nArguments\n\n\n\n\nt::TightBindingModel\n: a TightBindingModel.\n\n\n\n\nsource\n\n\n#\n\n\nHop.calhamiltonian\n \n \nFunction\n.\n\n\nCalculate Hamiltonian of a TightBindingModel t for a specific k point. k is a 3-element Vector{Float} representing k point in relative coordinate.\n\n\nsource\n\n\n#\n\n\nHop.caleig\n \n \nFunction\n.\n\n\nCalculate Hamiltonian of a TightBindingModel t for a specific k point. k is a 3-element Vector{Float} representing k point in relative coordinate.\n\n\nsource", 
            "title": "Home"
        }, 
        {
            "location": "/#hopjl-documentation", 
            "text": "#  Hop.TightBindingModel     Type .  A tight binding model.  Generally, every tight binding model is three dimensional. Thus every lattice vector should have three components. Lower dimensional models should be simulated by vacuum layer.  Constructor Arguments   lat::Matrix{Float64} : lattice vector. Lattice vectors should be provided as  lat[:, i]  positions::Matrix{Float64} : atom postions. Atom positions should be provided as  positions[:, i]   Fields   lat::Matrix{Float64} : lattice vector.   source  #  Hop.sethopping!     Function .  Set hoppings for a TightBindingModel t. Hoppings are expressed as \u27e80n|H|Rm\u27e9, where R is a 3-element Vector{Int} representing lattice vector.  source  #  Hop.addmagneticfield!     Function .  Add constant magnetic field in z direction for a TightBindingModel.  Arguments   t::TightBindingModel : a TightBindingModel. t has to be a cluster.  B::Float64 : magnetic field in z direction. B is actually Be/h, thus its unit is 1/[length]^2. e here is fundamental charge. Since electron charge is -e, positive B means -z direction for electron system.   source  #  Hop.makesupercell     Function .  Create a supercell TightBindingModel from original TightBindingModel.  Arguments   t::TightBindingModel : the original TightBindingModel.  ncells::Vector{Int} : a 3-element vector representing number of unit cells in three spatial directions.   source  #  Hop.makecluster     Function .  Create cluster by cutting off all hoppings between cells.  Arguments   t::TightBindingModel : a TightBindingModel.   source  #  Hop.calhamiltonian     Function .  Calculate Hamiltonian of a TightBindingModel t for a specific k point. k is a 3-element Vector{Float} representing k point in relative coordinate.  source  #  Hop.caleig     Function .  Calculate Hamiltonian of a TightBindingModel t for a specific k point. k is a 3-element Vector{Float} representing k point in relative coordinate.  source", 
            "title": "Hop.jl Documentation"
        }
    ]
}