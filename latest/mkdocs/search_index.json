{
    "docs": [
        {
            "location": "/", 
            "text": "Hop.jl Documentation\n\n\n#\n\n\nHop.makesupercell\n \n \nFunction\n.\n\n\nCreate a supercell TightBindingModel from original TightBindingModel.\n\n\nArguments\n\n\n\n\nt::TightBindingModel\n: the original TightBindingModel.\n\n\nncells::Vector{Int}\n: a 3-element vector representing number of unit cells in three spatial directions.\n\n\n\n\nsource\n\n\n#\n\n\nHop.TightBindingModel\n \n \nType\n.\n\n\nA tight binding model.\n\n\nGenerally, every tight binding model is three dimensional. Thus every lattice vector should have three components. Lower dimensional models should be simulated by vacuum layer.\n\n\nConstructor Arguments\n\n\n\n\nlat::Matrix{Float64}\n: lattice vector. Lattice vectors should be provided as \nlat[:, i]\n\n\npositions::Matrix{Float64}\n: atom postions. Atom positions should be provided as \npositions[:, i]\n\n\n\n\nFields\n\n\n\n\nlat::Matrix{Float64}\n: lattice vector.\n\n\n\n\nsource", 
            "title": "Home"
        }, 
        {
            "location": "/#hopjl-documentation", 
            "text": "#  Hop.makesupercell     Function .  Create a supercell TightBindingModel from original TightBindingModel.  Arguments   t::TightBindingModel : the original TightBindingModel.  ncells::Vector{Int} : a 3-element vector representing number of unit cells in three spatial directions.   source  #  Hop.TightBindingModel     Type .  A tight binding model.  Generally, every tight binding model is three dimensional. Thus every lattice vector should have three components. Lower dimensional models should be simulated by vacuum layer.  Constructor Arguments   lat::Matrix{Float64} : lattice vector. Lattice vectors should be provided as  lat[:, i]  positions::Matrix{Float64} : atom postions. Atom positions should be provided as  positions[:, i]   Fields   lat::Matrix{Float64} : lattice vector.   source", 
            "title": "Hop.jl Documentation"
        }
    ]
}